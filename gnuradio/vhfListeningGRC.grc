options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: options_0
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: VHF Listening Station
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 20.0]
    rotation: 0
    state: enabled

blocks:
- name: agc_gain
  id: variable
  parameters:
    comment: ''
    value: '1.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 436.0]
    rotation: 0
    state: enabled
- name: agc_rate
  id: variable
  parameters:
    comment: ''
    value: 1e-5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 308.0]
    rotation: 0
    state: enabled
- name: agc_reference
  id: variable
  parameters:
    comment: ''
    value: '0.3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 372.0]
    rotation: 0
    state: enabled
- name: audio_decim
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 436.0]
    rotation: 0
    state: enabled
- name: audio_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1448, 356.0]
    rotation: 0
    state: enabled
- name: decim
  id: variable
  parameters:
    comment: ''
    value: int(samp_rate / gcd_value)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 428.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,0,1,10
    label: Center Frequency
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: 138e6
    step: 25e3
    stop: 174e6
    value: 162.400e6
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 700.0]
    rotation: 0
    state: disabled
- name: freq
  id: variable
  parameters:
    comment: ''
    value: 162.400e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 356.0]
    rotation: 0
    state: enabled
- name: gcd_value
  id: variable
  parameters:
    comment: ''
    value: math.gcd(int(samp_rate), int(quad_rate))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 284.0]
    rotation: 0
    state: enabled
- name: highpass_cutoff_freq
  id: variable
  parameters:
    comment: ''
    value: '300'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 348.0]
    rotation: 0
    state: enabled
- name: highpass_trans_width
  id: variable
  parameters:
    comment: ''
    value: '50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 412.0]
    rotation: 0
    state: enabled
- name: interp
  id: variable
  parameters:
    comment: ''
    value: int(quad_rate / gcd_value)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 356.0]
    rotation: 0
    state: enabled
- name: lowpass_cutoff_freq
  id: variable
  parameters:
    comment: ''
    value: '12000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 356.0]
    rotation: 0
    state: enabled
- name: lowpass_trans_width
  id: variable
  parameters:
    comment: ''
    value: '3000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 420.0]
    rotation: 0
    state: enabled
- name: quad_rate
  id: variable
  parameters:
    comment: ''
    value: audio_rate*audio_decim
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 372.0]
    rotation: 0
    state: enabled
- name: rfGain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 1,0,1,10
    label: RF Gain (dB)
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '50'
    value: '48'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 700.0]
    rotation: 0
    state: disabled
- name: rfGain
  id: variable
  parameters:
    comment: ''
    value: '49'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 428.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '240000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 284.0]
    rotation: 0
    state: enabled
- name: analog_agc2_xx_0
  id: analog_agc2_xx
  parameters:
    affinity: ''
    alias: ''
    attack_rate: agc_rate
    comment: ''
    decay_rate: agc_rate
    gain: agc_gain
    max_gain: '65536'
    maxoutbuf: '0'
    minoutbuf: '0'
    reference: agc_reference
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 500.0]
    rotation: 0
    state: bypassed
- name: analog_nbfm_rx_0
  id: analog_nbfm_rx
  parameters:
    affinity: ''
    alias: ''
    audio_rate: audio_rate
    comment: ''
    max_dev: 5e3
    maxoutbuf: '0'
    minoutbuf: '0'
    quad_rate: quad_rate
    tau: 75e-6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 508.0]
    rotation: 0
    state: enabled
- name: analog_rail_ff_0
  id: analog_rail_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    hi: '0.8'
    lo: -.8
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 524.0]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: audio_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1448, 444.0]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport os\nimport\
      \ logging\nimport sys\n\n# Add venv to path if needed\nvenv_paths = ['/home/pi/vhf-listening/venv/lib/python3.11/site-packages',\n\
      \              '/home/carolyn/projects/vhf-listening/venv/lib/python3.11/site-packages',\n\
      \              '/home/carolyn/projects/vhf-listening/venv/lib/python3.12/site-packages']\n\
      for venv_path in venv_paths:\n    if os.path.exists(venv_path) and venv_path\
      \ not in sys.path:\n        sys.path.insert(0, venv_path)\n\ntry:\n    import\
      \ shout\n    from dotenv import load_dotenv\n    import lameenc\n    SHOUT_AVAILABLE\
      \ = True\n    LAMEENC_AVAILABLE = True\nexcept ImportError as e:\n    print(f'Import\
      \ error: {e}')\n    SHOUT_AVAILABLE = False\n    LAMEENC_AVAILABLE = False\n\
      \    def load_dotenv(x): pass\n\nlogging.basicConfig(level=logging.INFO)\nlogger\
      \ = logging.getLogger(__name__)\n\nclass blk(gr.sync_block):\n    def __init__(self):\n\
      \        gr.sync_block.__init__(self, name=\"Icecast Sink\", in_sig=[np.float32],\
      \ out_sig=None)\n        self._load_config()\n        self.shout = None\n  \
      \      self.connected = False\n        self.encoder = None\n        self._setup_encoder()\n\
      \        logger.info(\"Icecast sink initialized\")\n        logger.info(f\"\
      Target: {self.icecast_host}:{self.icecast_port}{self.icecast_mount}\")\n\n \
      \   def _load_config(self):\n        try:\n            env_path = os.path.join(os.path.dirname(__file__),\
      \ '..', '.env')\n            load_dotenv(env_path)\n            self.icecast_host\
      \ = os.getenv('ICECAST_HOST', 'localhost')\n            self.icecast_port =\
      \ int(os.getenv('ICECAST_PORT', '8000'))\n            self.icecast_password\
      \ = os.getenv('ICECAST_PASSWORD', 'hackme')\n            self.icecast_mount\
      \ = os.getenv('ICECAST_MOUNT', '/stream.mp3')\n            self.stream_name\
      \ = os.getenv('ICECAST_NAME', 'VHF Listening Station')\n            self.stream_genre\
      \ = os.getenv('ICECAST_GENRE', 'Radio')\n            logger.info(\"Icecast configuration\
      \ loaded\")\n        except Exception as e:\n            logger.error(f\"Config\
      \ failed: {e}\")\n            self.icecast_host = 'localhost'\n            self.icecast_port\
      \ = 8000\n            self.icecast_password = 'hackme'\n            self.icecast_mount\
      \ = '/stream.mp3'\n            self.stream_name = 'VHF Listening Station'\n\
      \            self.stream_genre = 'Radio'\n\n    def _setup_encoder(self):\n\
      \        if not LAMEENC_AVAILABLE:\n            logger.error(\"lameenc not available\"\
      )\n            return\n        try:\n            self.encoder = lameenc.Encoder()\n\
      \            self.encoder.set_bit_rate(128)\n            self.encoder.set_in_sample_rate(48000)\n\
      \            self.encoder.set_channels(1)\n            self.encoder.set_quality(2)\n\
      \            logger.info(\"MP3 encoder initialized\")\n        except Exception\
      \ as e:\n            logger.error(f\"Encoder setup failed: {e}\")\n        \
      \    self.encoder = None\n\n    def start(self):\n        logger.info(\"Starting\
      \ Icecast sink...\")\n        if not SHOUT_AVAILABLE:\n            logger.error(\"\
      python-shout not available\")\n            return False\n        try:\n    \
      \        self.shout = shout.Shout()\n            self.shout.host = self.icecast_host\n\
      \            self.shout.port = self.icecast_port\n            self.shout.user\
      \ = 'source'\n            self.shout.password = self.icecast_password\n    \
      \        self.shout.mount = self.icecast_mount\n            self.shout.format\
      \ = 'mp3'\n            self.shout.protocol = 'http'\n            self.shout.name\
      \ = self.stream_name\n            self.shout.genre = self.stream_genre\n   \
      \         self.shout.open()\n            logger.info(\"Connected to Icecast!\"\
      )\n            self.connected = True\n        except Exception as e:\n     \
      \       logger.error(f\"Connection failed: {e}\")\n            self.connected\
      \ = False\n        return True\n\n    def stop(self):\n        if self.shout\
      \ and self.connected:\n            try:\n                self.shout.close()\n\
      \            except:\n                pass\n        self.connected = False\n\
      \        return True\n\n    def work(self, input_items, output_items):\n   \
      \     if not self.connected or not self.encoder:\n            return len(input_items[0])\n\
      \        audio_samples = input_items[0]\n        try:\n            pcm_data\
      \ = (audio_samples * 32767).astype(np.int16)\n            mp3_data = self.encoder.encode(pcm_data)\n\
      \            if mp3_data:\n                self.shout.send(bytes(mp3_data))\n\
      \                self.shout.sync()\n        except Exception as e:\n       \
      \     logger.error(f\"Streaming error: {e}\")\n            self.connected =\
      \ False\n        return len(audio_samples)"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Icecast Sink', 'blk', [], [('0', 'float', 1)], [], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1456, 536.0]
    rotation: 0
    state: enabled
- name: high_pass_filter_0
  id: high_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: highpass_cutoff_freq
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: audio_rate
    type: fir_filter_fff
    width: highpass_trans_width
    win: window.WIN_KAISER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 484.0]
    rotation: 0
    state: bypassed
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 20.0]
    rotation: 0
    state: enabled
- name: import_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import os; os.environ['QT_QPA_PLATFORM'] = 'offscreen'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 84.0]
    rotation: 0
    state: enabled
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: lowpass_cutoff_freq
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: audio_rate
    type: fir_filter_fff
    width: lowpass_trans_width
    win: window.WIN_KAISER
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 484.0]
    rotation: 0
    state: bypassed
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: freq
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 756.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 652.0]
    rotation: 0
    state: disabled
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: decim
    fbw: '0'
    interp: interp
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 508.0]
    rotation: 0
    state: enabled
- name: soapy_rtlsdr_source_0
  id: soapy_rtlsdr_source
  parameters:
    affinity: ''
    agc: 'False'
    alias: ''
    bias: 'False'
    bufflen: '16384'
    center_freq: freq
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: rfGain
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 524.0]
    rotation: 0
    state: enabled

connections:
- [analog_agc2_xx_0, '0', high_pass_filter_0, '0']
- [analog_nbfm_rx_0, '0', analog_agc2_xx_0, '0']
- [analog_rail_ff_0, '0', epy_block_0, '0']
- [high_pass_filter_0, '0', low_pass_filter_0, '0']
- [low_pass_filter_0, '0', analog_rail_ff_0, '0']
- [rational_resampler_xxx_0, '0', analog_nbfm_rx_0, '0']
- [soapy_rtlsdr_source_0, '0', qtgui_freq_sink_x_0, '0']
- [soapy_rtlsdr_source_0, '0', qtgui_time_sink_x_0, '0']
- [soapy_rtlsdr_source_0, '0', rational_resampler_xxx_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.9.2
